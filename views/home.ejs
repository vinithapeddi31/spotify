<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/style.css">
    <link rel="stylesheet" href="/utility.css">
    <script src="https://cdn.socket.io/4.7.4/socket.io.min.js"></script>
    <script>             const socket = io(); 
    </script>
    <title>Spotify - Web Player: Music for everyone</title>
</head>

<body>
    <div class="container flex bg-black">
        <div class="left">
            <div class="home bg-grey rounded m-1 p-1">
                <div class="logo"><img width="110" class="invert" src="../images/logo.svg" alt=""></div>
                <ul>
                    <li><img class="invert" src="../images/home.svg" alt="home">Home</li>
                    <li>
                        <img class="invert" src="../images/search.svg" alt="home" onclick="searchSongs()"><input
                            type="text" id="searchInput" placeholder="Search for songs">
                    </li>
                </ul>
            </div>

            <div class="library bg-grey rounded m-1 p-1">
                <div class="heading">
                    <img class="invert" src="../images/library.svg" alt="">
                    <h2>
                        Your Library
                    </h2>
                </div>

                <div class="songList">
                    <ul id="songListContainer">
                        <% songs.forEach(song=> { %>
                            <li>
                                <%= song.name %>
                                    <span
                                        onclick="window.musicFunctions.playSong('<%= song.audioUrl %>', '<%= song.name %>','<%= song.artist %>', '<%= song.thumbnailUrl %>')">
                                        <img src="../images/play.svg" alt="Play">
                                    </span>

                            </li>
                            <% }); %>
                    </ul>

                </div>


                <div class="footer">
                    <div><a href="https://www.spotify.com/jp/legal/"><span>Legal</span></a></div>
                    <div><a href="https://www.spotify.com/jp/privacy/"><span>Privacy Center</span></a></div>
                    <div><a href="https://www.spotify.com/jp/legal/privacy-policy/"><span>Privacy Policy</span></a>
                    </div>
                    <div><a href="https://www.spotify.com/jp/legal/cookies-policy/"><span>Cookies</span></a></div>
                    <div><a href="https://www.spotify.com/jp/legal/privacy-policy/#s3"><span>About Ads</span></a></div>
                    <div><a href="https://www.spotify.com/jp/accessibility/"><span>Accessibility</span></a></div>
                </div>
            </div>


        </div>
        <div class="right bg-grey rounded">
            <div class="header">
                <div class="buttons">
                    <a href="#" class="user-button" id="dropdown" onclick="toggleDropdown()">
                        <%= username.charAt(0).toUpperCase() %>
                    </a>
                    <div id="dropdownContent" class="dropdown-content">
                        <a href="/auth/login">Logout</a>
                    </div>
                </div>
            </div>
            <div class="spotifyPlaylists">
                <div class="songCard" id="songCard" style="display: none;">
                    <img id="songThumbnail" src="" alt="Song Thumbnail">
                    <div class="songDetails">
                        <h2 id="songName"></h2>
                        <p id="artistName"></p>
                    </div>
                </div>

                <div class="add-button" onclick="handleAddButtonClick()">
                    <img src="../images/add.svg" alt="Add Song">
                </div>
                <div class="playbar">
                    <div class="seekbar">
                        <div id="progressBar" class="circle">

                        </div>
                    </div>
                    <div class="abovebar">


                        <div class="songinfo">
                            <h3 id="currentSongName"></h3>
                        </div>
                        <div class="songbuttons">

                            <div class="songbuttons">
                                <div id="previous" class="control-button"
                                    onclick="window.musicFunctions.previousSong()">
                                    <img width="35" src="../images/prevsong.svg" alt="Previous">
                                </div>
                                <div id="playPause" class="control-button" onclick="window.musicFunctions.togglePlay()">
                                    <img id="playPauseIcon" width="35" src="../images/play.svg" alt="Play">
                                </div>
                                <div id="next" class="control-button" onclick="window.musicFunctions.nextSong()">
                                    <img width="35" src="../images/nextsong.svg" alt="Next">
                                </div>
                            </div>

                        </div>
                        <audio id="audioPlayer"></audio>
                        <div class="timevol">


                            <div class="songtime">

                            </div>
                            <div class="volume">
                                <img width="25" src="../images/volume.svg" alt="Volume">
                                <div class="range">
                                    <input type="range" name="volume" id="volumeRange"
                                        onchange="window.musicFunctions.changeVolume(this.value)">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>
        let currentSongIndex = 0;
        const songs = JSON.parse('<%- JSON.stringify(songs) %>');
        function updateProgressBar() {
            window.musicFunctions.updateProgressBar();
        }
        const musicFunctions = {
            emitPlayEvent: function (audioUrl, songName, artistName, thumbnailUrl) {
                socket.emit("play", { audioUrl, songName, artistName, thumbnailUrl });
            },
            emitUpdateProgressBarEvent: function () {
                socket.emit("updateProgressBar");
            },

            emitTogglePlayEvent: function () {
                socket.emit("togglePlay");
            },

            emitPlaySelectedSongEvent: function () {
                socket.emit("playSelectedSong");
            },

            emitChangeVolumeEvent: function (value) {
                socket.emit("changeVolume", value);
            },
            emitNextEvent: function () {
                socket.emit("next");
            },
            emitPreviousEvent: function () {
                socket.emit("previous");
            },
            updateProgressBar: function () {
                this.emitUpdateProgressBarEvent();
            },
            playSong: function (audioUrl, songName, artistName, thumbnailUrl) {
                this.emitPlayEvent(audioUrl, songName, artistName, thumbnailUrl);
            },

            nextSong: function () {
                this.emitNextEvent();
            },
            playSelectedSong: function () {
                this.emitPlaySelectedSongEvent();
            },
            togglePlay: function () {
                this.emitTogglePlayEvent();
            },
            changeVolume: function (value) {
                this.emitChangeVolumeEvent(value);
            },

            previousSong: function () {
                this.emitPreviousEvent();
            }
        };
        document.addEventListener("DOMContentLoaded", function () {
            window.socket = socket;
            window.musicFunctions = musicFunctions;
        });

        document.addEventListener('DOMContentLoaded', function () {
            document.getElementById('dropdownContent').style.display = 'none';
        });

        function toggleDropdown() {
            var dropdownContent = document.getElementById('dropdownContent');
            dropdownContent.style.display = (dropdownContent.style.display === 'none') ? 'block' : 'none';
        }

        window.onclick = function (event) {
            if (!event.target.matches('#dropdown')) {
                var dropdownContent = document.getElementById('dropdownContent');
                if (dropdownContent.style.display === 'block') {
                    dropdownContent.style.display = 'none';
                }
            }
        };
        function handleAddButtonClick() {
            window.open('/song/create', '_blank');
        }
        function searchSongs() {
            const searchInput = document.getElementById('searchInput');
            const query = searchInput.value;


            fetch(`/song/search?query=${query}`)
                .then(response => response.json())
                .then(results => {
                    const songListContainer = document.getElementById('songListContainer');
                    songListContainer.innerHTML = '';

                    results.forEach(song => {
                        songListContainer.innerHTML += `<li onclick="window.musicFunctions.playSong('${song.audioUrl}', '${song.name}', '${song.artist}', '${song.thumbnailUrl}')">${song.name}</li>`;
                    });
                })
                .catch(error => console.error(error));
        }

        socket.on("play", (data) => {
            console.log("data is",data)
            const audioElement = document.getElementById('audioPlayer');
            const songThumbnail = document.getElementById('songThumbnail');
            const songNameElement = document.getElementById('songName');
            const artistNameElement = document.getElementById('artistName');
            const songCard = document.getElementById('songCard');
            const progressBar = document.getElementById('progressBar');
            const playPauseIcon = document.getElementById('playPauseIcon');
            
            if (audioElement) {
                audioElement.src = data.audioUrl;
                audioElement.addEventListener('canplay', function () {
                    audioElement.play();
                    playPauseIcon.src = "../images/pause.svg";
                });
                songThumbnail.src = data.thumbnailUrl;
                songNameElement.innerText = data.songName;
                artistNameElement.innerText = data.artistName;
                songCard.style.display = 'flex';

                audioElement.addEventListener('timeupdate', updateProgressBar);

            } else {
                console.error("Audio element not found");
            }
        })
        socket.on("updateProgressBar", () => {
            const audioElement = document.getElementById('audioPlayer');
            const progressBar = document.getElementById('progressBar');
            const percentage = (audioElement.currentTime / audioElement.duration) * 100;
            progressBar.style.width = percentage + '%';
        })
        socket.on("next", () => {
            currentSongIndex = (currentSongIndex + 1) % songs.length;
            musicFunctions.playSelectedSong();
        })
        socket.on("previous", () => {
            currentSongIndex = (currentSongIndex - 1 + songs.length) % songs.length;
            musicFunctions.playSelectedSong();
        });
        socket.on("playSelectedSong", () => {
            const song = songs[currentSongIndex];
            musicFunctions.playSong(song.audioUrl, song.name, song.artist, song.thumbnailUrl);
            
        })    

        socket.on("changeVolume", (value) => {
            const audioElement = document.querySelector('audio');
            const volumeRange = document.getElementById('volumeRange');

            audioElement.volume = value / 100;
            volumeRange.value = value;

        })
        socket.on("togglePlay", () => {
            const audioElement = document.getElementById('audioPlayer');
            const playPauseIcon = document.getElementById('playPauseIcon');

            if (audioElement.paused) {
                audioElement.play();
                playPauseIcon.src = "../images/pause.svg";
            } else {
                audioElement.pause();
                playPauseIcon.src = "../images/play.svg";
            }

        })
            
    </script>
</body>

</html>